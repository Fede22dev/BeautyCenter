name: Build EXE Windows

on:
  [ push ]

jobs:
  build-exe:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install UPX
        run: |
          $release = Invoke-RestMethod -Uri 'https://api.github.com/repos/upx/upx/releases/latest'
          $asset = $release.assets | Where-Object { $_.name -like '*-win64.zip' }
          $downloadUrl = $asset.browser_download_url
          Write-Host "Downloading from $downloadUrl"
          Invoke-WebRequest -Uri $downloadUrl -OutFile 'upx.zip'
          Expand-Archive -Path 'upx.zip' -DestinationPath 'upx_temp'
          $upxPath = (Get-ChildItem -Path 'upx_temp' -Filter 'upx.exe' -Recurse).Directory.FullName
          echo "$upxPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: pwsh

      - name: Get version from name_version.py
        id: get_version
        run: |
          $nameMatch = Get-Content name_version.py | Select-String -Pattern "APP_NAME\s*=\s*['""](.*?)['""]"
          if ($null -ne $nameMatch) 
          {
            $appName = $nameMatch.Matches.Groups[1].Value
            echo "APP_NAME=$appName" >> $env:GITHUB_ENV
            echo "Found app name: $appName"
          } 
          else 
          {
            echo "::error::APP_NAME not found in name_version.py"
            exit 1
          }
          
          $versionMatch = Get-Content name_version.py | Select-String -Pattern "APP_VERSION\s*=\s*['""](.*?)['""]"
          if ($null -ne $versionMatch) 
          {
            $appVersion = $versionMatch.Matches.Groups[1].Value
            echo "APP_VERSION=$appVersion" >> $env:GITHUB_ENV
            echo "Found version: $appVersion"
          } 
          else 
          {
            echo "::error::APP_VERSION not found in name_version.py"
            exit 1
          }
        shell: pwsh

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install PyInstaller
        run: |
          python -m pip install pyinstaller

      - name: Build Windows EXE
        run: ./build_exe_beauty_center.ps1

      - name: Create or Update Latest Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            Latest development build.
            Version: ${{ env.VERSION }}
            Commit: ${{ github.sha }}
          name: ${{ env.APP_NAME }} v. ${{ env.APP_VERSION }}
          tag_name: latest-build
          prerelease: true
          files: |
            dist/${{ env.APP_NAME }} v. ${{ env.APP_VERSION }}.exe
